%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2


imu_topic: "/airsim_node/drone_1/imu/imu"
image0_topic: "/airsim_node/drone_1/front_left/Scene"
image1_topic: "/airsim_node/drone_1/front_right/Scene"

output_path: "/home/c/vins_output"


cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.
body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 0.0, 0.0, 1.0, 0.26,
       1.0, 0.0, 0.0, -0.0475,
       0.0, 1.0, 0.0, 0.0,
       0., 0., 0., 1. ]

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 0.0, 0.0, 1.0, 0.26,
       1.0, 0.0, 0.0, 0.0475,
       0.0, 1.0, 0.0, 0.0,
       0., 0., 0., 1. ]

# body_T_cam0: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ -1.7736621422259624e-04, -8.1287436519805745e-04, 9.9999965388818657e-01, 2.0112559577793138e-01,
#        9.9999994488889743e-01, -2.8079231720234965e-04, 1.7713801688051811e-04, -4.2933692200350329e-02,
#        2.8064822906365139e-04, 9.9999963019540239e-01, 8.1292412346978260e-04, 1.6134945352787446e-02, 
#        0., 0., 0., 1. ]
# body_T_cam1: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ -2.2502618908282201e-04, -7.0337096872952198e-04,
#        9.9999972731621001e-01, 2.0294894310217518e-01,
#        9.9999992980491126e-01, -2.9974690633238765e-04,
#        2.2481540131880084e-04, 5.1825349709821826e-02,
#        2.9958869596952153e-04, 9.9999970771049351e-01,
#        7.0343837026043410e-04, 1.8410094071168313e-02, 0., 0., 0., 1. ]
#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)


#https://blog.csdn.net/ZDPZN/article/details/121900036
#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.04318740066781056           # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 2.7460975658499546e-04         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.00001602564369675617         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 1.5890184337345527e-07       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.81007         # gravity magnitude

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: -0.05                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/fast/savedfiles/output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 

